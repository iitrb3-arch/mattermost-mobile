name: Build Mattermost Mobile APK (Release Signed)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install yarn
        run: npm install -g yarn

      - name: Configure Git identity
        run: |
          git config --global user.email "iitrb3@gmail.com"
          git config --global user.name "iitrb3-arch"

      # Solidarity / preinstall را بی‌اثر می‌کنیم
      - name: Disable only Solidarity preinstall
        run: |
          if [ -f package.json ]; then
            node -e "const fs=require('fs');const f='package.json';const p=JSON.parse(fs.readFileSync(f,'utf8'));if(p.scripts&&p.scripts.preinstall){delete p.scripts.preinstall;fs.writeFileSync(f,JSON.stringify(p,null,2));console.log('Removed scripts.preinstall');}else{console.log('No scripts.preinstall to remove');}"
          fi
          if [ -f scripts/preinstall.sh ]; then echo 'exit 0' > scripts/preinstall.sh; fi

      - name: Install dependencies (allow postinstall)
        run: yarn install --ignore-engines

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Generate keystore
        run: |
          keytool -genkeypair -v \
            -keystore release.keystore \
            -alias matterkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass mypass123 \
            -keypass mypass123 \
            -dname "CN=iitrb3-arch, OU=Dev, O=Workspace, L=Tehran, ST=Tehran, C=IR"

      # بعضی پروژه‌ها compileSdk پایین دارند؛ این سطر بی‌خطر است
      - name: Patch compileSdkVersion to 34 (safe)
        run: |
          sed -i 's/compileSdkVersion *[0-9][0-9]*/compileSdkVersion 34/' android/app/build.gradle || true

      - name: Ensure dist assets + fonts + sounds (fallback)
        run: |
          set -e
          COMPASS_ICONS="node_modules/@mattermost/compass-icons/font/compass-icons.ttf"
          if [ -f "$COMPASS_ICONS" ]; then
            mkdir -p assets/fonts android/app/src/main/assets/fonts
            cp -f "$COMPASS_ICONS" assets/fonts/ || true
            cp -f "$COMPASS_ICONS" android/app/src/main/assets/fonts/ || true
          fi
          mkdir -p dist/assets
          if [ -f scripts/generate-assets.js ]; then node scripts/generate-assets.js || true; fi
          if [ ! -d dist/assets/i18n ]; then
            mkdir -p dist/assets/i18n
            if [ -d app/assets/i18n ]; then cp -f app/assets/i18n/*.json dist/assets/i18n/ 2>/dev/null || true; fi
            if [ -d assets/i18n ]; then cp -f assets/i18n/*.json dist/assets/i18n/ 2>/dev/null || true; fi
          fi
          if [ -d assets/sounds ]; then
            mkdir -p android/app/src/main/res/raw/
            cp -f assets/sounds/* android/app/src/main/res/raw/ || true
          fi

      # --- Polyfills لازم برای باندل ---
      - name: Ensure polyfills (events + common shims)
        run: |
          NEED=0
          node -e "try{require.resolve('events')}catch(e){process.exit(1)}" || NEED=1
          if [ $NEED -eq 1 ]; then yarn add events@3 buffer util readable-stream assert process; fi

      - name: Create minimal metro override
        run: |
          cat > metro.override.config.js <<'EOF'
          module.exports = {
            resolver: {
              extraNodeModules: {
                events: require.resolve('events/'),
                buffer: require.resolve('buffer/'),
                util: require.resolve('util/'),
                stream: require.resolve('readable-stream'),
                assert: require.resolve('assert/'),
                process: require.resolve('process/browser'),
              },
            },
          };
          EOF
          node -e "console.log('events ->', require.resolve('events/'))"

      - name: Detect JS entry file
        id: detect_entry
        run: |
          if [ -f index.ts ]; then
            echo "entry=index.ts" >> $GITHUB_OUTPUT
          elif [ -f index.js ]; then
            echo "entry=index.js" >> $GITHUB_OUTPUT
          else
            echo "❌ No entry file (index.ts/js) at repo root"; ls -la
            exit 1
          fi

      - name: Build JS bundle manually (with metro override)
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          ENTRY="${{ steps.detect_entry.outputs.entry }}"
          echo "Using entry: $ENTRY"
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --config metro.override.config.js \
            --platform android \
            --dev false \
            --entry-file "$ENTRY" \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res \
            --reset-cache

      - name: Build Android Release APK
        working-directory: android
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          ./gradlew clean
          ./gradlew assembleRelease -x :app:createBundleReleaseJsAndAssets \
            --no-daemon --warning-mode all \
            -Pandroid.injected.signing.store.file=../release.keystore \
            -Pandroid.injected.signing.store.password=mypass123 \
            -Pandroid.injected.signing.key.alias=matterkey \
            -Pandroid.injected.signing.key.password=mypass123

      - name: Verify APK exists
        run: |
          test -f android/app/build/outputs/apk/release/app-release.apk || (echo "APK not found!" && exit 1)

      - name: Upload Signed Release APK
        uses: actions/upload-artifact@v4
        with:
          name: mattermost-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error

      # (اختیاری) AAB
      - name: Build Android App Bundle (AAB)
        working-directory: android
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          ./gradlew bundleRelease -x :app:createBundleReleaseJsAndAssets \
            --no-daemon --warning-mode all \
            -Pandroid.injected.signing.store.file=../release.keystore \
            -Pandroid.injected.signing.store.password=mypass123 \
            -Pandroid.injected.signing.key.alias=matterkey \
            -Pandroid.injected.signing.key.password=mypass123

      - name: Verify AAB exists
        run: |
          test -f android/app/build/outputs/bundle/release/app-release.aab || (echo "AAB not found!" && exit 1)

      - name: Upload Signed Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: mattermost-release-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error
