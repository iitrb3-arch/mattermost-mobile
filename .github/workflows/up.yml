name: Build Mattermost Mobile APK (Release Signed)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      JAVA_DISTRIBUTION: temurin
      JAVA_VERSION: '17'
      KEY_ALIAS: iitrb3-arch
      KEY_PASS: android
      STORE_PASS: android
      STORE_FILE: release.keystore

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install yarn
        run: npm i -g yarn

      - name: Configure Git identity
        run: |
          git config --global user.email "iitrb3@gmail.com"
          git config --global user.name "iitrb3-arch"

      - name: Install dependencies (skip solidarity)
        env:
          SKIP_SOLIDARITY: '1'
          CI: 'true'
        run: |
          yarn install --ignore-scripts --frozen-lockfile || yarn install --ignore-scripts

      - name: Ensure android assets folders
        run: |
          mkdir -p android/app/src/main/assets
          mkdir -p android/app/src/main/res

      - name: Fallback assets (only if dist missing)
        shell: bash
        run: |
          if [ ! -d "dist/assets" ]; then
            echo "dist/assets not found -> using base assets (fallback)"
            mkdir -p dist/assets
            if [ -d assets/base ]; then
              rsync -a assets/base/ dist/assets/ || true
            fi
            if [ -d assets/base/release ]; then
              rsync -a assets/base/release/ dist/assets/ || true
            fi
          fi

      - name: Add polyfills & events package
        env:
          SKIP_SOLIDARITY: '1'
        run: |
          yarn add -D events || npm i -D events --ignore-scripts --no-audit --no-fund
          cat > polyfills.js <<'EOF'
          if (typeof globalThis.process === 'undefined') {
            globalThis.process = { env: {} };
          }
          try { const {Buffer} = require('buffer'); if (typeof globalThis.Buffer === 'undefined') globalThis.Buffer = Buffer; } catch(e){}
          EOF

      - name: Create metro override (assetRegistryPath + resolver)
        shell: bash
        run: |
          cat > metro.override.config.js <<'EOF'
          const path = require('path');
          module.exports = {
            transformer: {
              assetRegistryPath: require.resolve('react-native/Libraries/Image/AssetRegistry'),
            },
            resolver: {
              extraNodeModules: {
                events: require.resolve('events/'),
              },
            },
            serializer: {
              getModulesRunBeforeMainModule: () => [
                path.resolve(__dirname, 'polyfills.js'),
              ],
            },
          };
          EOF

      - name: Detect JS entry file
        shell: bash
        run: |
          set -e
          CANDIDATES=(
            "index.ts"
            "index.tsx"
            "index.js"
            "app/index.ts"
            "app/index.tsx"
            "app/index.js"
            "share_extension/index.tsx"
          )
          ENTRY=""
          for f in "${CANDIDATES[@]}"; do
            if [ -f "$f" ]; then ENTRY="$f"; break; fi
          done
          if [ -z "$ENTRY" ]; then
            ENTRY=$(git ls-files | grep -E '/index\.(ts|tsx|js)$' | head -n1 || true)
          fi
          if [ -z "$ENTRY" ]; then
            echo "❌ No entry file found"
            exit 1
          fi
          echo "Using entry: $ENTRY"
          echo "ENTRY=$ENTRY" >> $GITHUB_ENV

      - name: Bundle JS (metro override)
        shell: bash
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file "$ENTRY" \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res \
            --config metro.override.config.js \
            --asset-registry-path node_modules/react-native/Libraries/Image/AssetRegistry

      - name: Patch compileSdkVersion to 34
        shell: bash
        run: |
          sed -i 's/compileSdkVersion *[0-9][0-9]*/compileSdkVersion 34/g' android/app/build.gradle || true
          sed -i 's/targetSdkVersion *[0-9][0-9]*/targetSdkVersion 34/g' android/app/build.gradle || true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Generate release keystore (self-signed)
        working-directory: android/app
        run: |
          keytool -genkeypair -v \
            -keystore ${{ env.STORE_FILE }} \
            -alias ${{ env.KEY_ALIAS }} \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass $STORE_PASS -keypass $KEY_PASS \
            -dname "CN=${{ env.KEY_ALIAS }}, OU=Dev, O=Workspace, L=Tehran, ST=Tehran, C=IR"

      - name: Build Android Release APK
        working-directory: android
        run: |
          ./gradlew --no-daemon --warning-mode all \
            assembleRelease \
            -Pandroid.injected.signing.store.file=app/${{ env.STORE_FILE }} \
            -Pandroid.injected.signing.store.password=${{ env.STORE_PASS }} \
            -Pandroid.injected.signing.key.alias=${{ env.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ env.KEY_PASS }}

      - name: Upload Signed Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
