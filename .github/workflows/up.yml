name: Build Mattermost Mobile APK (Release Signed)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install yarn
        run: npm install -g yarn

      - name: Configure Git identity
        run: |
          git config --global user.email "iitrb3@gmail.com"
          git config --global user.name "iitrb3-arch"

      # فقط preinstall (Solidarity) را خاموش می‌کنیم، بقیه اسکریپت‌ها بمانند
      - name: Disable only Solidarity preinstall
        run: |
          if [ -f package.json ]; then
            node - <<'NODE'
            const fs = require('fs');
            const p = JSON.parse(fs.readFileSync('package.json','utf8'));
            if (p.scripts && p.scripts.preinstall) {
              delete p.scripts.preinstall;
              fs.writeFileSync('package.json', JSON.stringify(p, null, 2));
              console.log('Removed scripts.preinstall');
            } else {
              console.log('No scripts.preinstall to remove');
            }
            NODE
          fi
          if [ -f scripts/preinstall.sh ]; then echo "exit 0" > scripts/preinstall.sh; fi
          export SKIP_SOLIDARITY=1

      - name: Install dependencies (allow postinstall/build scripts)
        run: |
          export SKIP_SOLIDARITY=1
          yarn install --ignore-engines

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Generate keystore
        run: |
          keytool -genkeypair -v \
            -keystore release.keystore \
            -alias matterkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass mypass123 \
            -keypass mypass123 \
            -dname "CN=iitrb3-arch, OU=Dev, O=Workspace, L=Tehran, ST=Tehran, C=IR"

      - name: Patch Gradle configs (sdk 34 + mavenCentral)
        run: |
          echo "Patching Gradle build files..."
          find . -type f -name "build.gradle" -print0 | while IFS= read -r -d '' f; do
            sed -i 's/compileSdkVersion *[0-9][0-9]*/compileSdkVersion 34/' "$f" || true
            sed -i 's/targetSdkVersion *[0-9][0-9]*/targetSdkVersion 34/' "$f" || true
            sed -i 's/jcenter()/mavenCentral()/' "$f" || true
          done

      # اگر اسکریپت‌های ریپو dist را نساختند، فول‌بک می‌زنیم
      - name: Ensure dist/assets exists (fallback for @assets alias)
        run: |
          set -e
          mkdir -p dist/assets
          if [ -d app/assets ]; then
            rsync -a --delete app/assets/ dist/assets/ || true
          elif [ -d assets ]; then
            rsync -a --delete assets/ dist/assets/ || true
          fi
          # حداقل i18n را بساز
          if [ ! -d dist/assets/i18n ]; then
            mkdir -p dist/assets/i18n
            if [ -d app/assets/i18n ]; then cp -f app/assets/i18n/*.json dist/assets/i18n/ 2>/dev/null || true; fi
            if [ -d assets/i18n ]; then cp -f assets/i18n/*.json dist/assets/i18n/ 2>/dev/null || true; fi
          fi
          echo "dist/assets contents:"
          find dist/assets -maxdepth 2 -type f | sed 's/^/ - /' || true

      - name: Clean caches (metro/gradle) and raise Node memory
        run: |
          rm -rf $HOME/.gradle/caches/ || true
          rm -rf node_modules/.cache || true
          echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV

      - name: Build Android Release APK (let Gradle bundle JS)
        working-directory: android
        run: |
          ./gradlew clean
          ./gradlew assembleRelease --no-daemon --warning-mode all \
            -Pandroid.injected.signing.store.file=../release.keystore \
            -Pandroid.injected.signing.store.password=mypass123 \
            -Pandroid.injected.signing.key.alias=matterkey \
            -Pandroid.injected.signing.key.password=mypass123

      - name: Upload Signed Release APK
        uses: actions/upload-artifact@v4
        with:
          name: mattermost-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
